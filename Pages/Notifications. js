import React, { useState, useEffect } from 'react';
import { View, Text, Button, FlatList, StyleSheet, Alert } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import * as Notifications from 'expo-notifications';

// Set notification handler
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});

export default function App() {
  const [attendance, setAttendance] = useState([]);
  const [permissionGranted, setPermissionGranted] = useState(false);

  // Request notification permission
  useEffect(() => {
    const requestPermissions = async () => {
      const { status } = await Notifications.requestPermissionsAsync();
      setPermissionGranted(status === 'granted');
    };
    requestPermissions();
    loadAttendance();
  }, []);

  // Load attendance from storage
  const loadAttendance = async () => {
    const storedData = await AsyncStorage.getItem('attendance');
    if (storedData) setAttendance(JSON.parse(storedData));
  };

  // Save attendance to storage
  const saveAttendance = async (data) => {
    await AsyncStorage.setItem('attendance', JSON.stringify(data));
  };

  // Mark attendance
  const markAttendance = async () => {
    const date = new Date().toLocaleDateString();
    if (attendance.find((item) => item.date === date)) {
      Alert.alert('Already Marked', 'Attendance already recorded for today.');
      return;
    }

    const newAttendance = [...attendance, { date, status: 'Present' }];
    setAttendance(newAttendance);
    await saveAttendance(newAttendance);
    sendNotification('Attendance Marked', `You have marked attendance for ${date}.`);
  };

  // Send local notification
  const sendNotification = async (title, body) => {
    if (!permissionGranted) return;

    await Notifications.scheduleNotificationAsync({
      content: { title, body },
      trigger: null,
    });
  };

  return (
    <View style={styles.container}>
      <Text style={styles.header}>ðŸ“… Attendance Tracker</Text>
      <Button title="Mark Attendance" onPress={markAttendance} />
      <FlatList
        data={attendance}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item }) => (
          <View style={styles.item}>
            <Text style={styles.text}>{item.date}</Text>
            <Text style={styles.text}>{item.status}</Text>
          </View>
        )}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#f9fafb',
  },
  header: {
    fontSize: 22,
    fontWeight: 'bold',
    textAlign: 'center',
    marginVertical: 20,
  },
  item: {
    backgroundColor: '#e5e7eb',
    padding: 15,
    marginVertical: 5,
    borderRadius: 8,
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  text: {
    fontSize: 16,
  },
});